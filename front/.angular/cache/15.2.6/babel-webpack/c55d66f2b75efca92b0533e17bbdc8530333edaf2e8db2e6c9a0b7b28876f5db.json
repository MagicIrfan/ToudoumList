{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const token = this.auth.getToken();\n    if (token) {\n      return true;\n    } else {\n      this.router.navigateByUrl('/auth/connexion');\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,IAAiB,EACjBC,MAAc;IADd,SAAI,GAAJD,IAAI;IACJ,WAAM,GAANC,MAAM;EAAW;EAErCC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,MAAMC,KAAK,GAAY,IAAI,CAACL,IAAI,CAACM,QAAQ,EAAE;IAC3C,IAAID,KAAK,EAAE;MACT,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,MAAM,CAACM,aAAa,CAAC,iBAAiB,CAAC;MAC5C,OAAO,KAAK;;EAEhB;;AAbWT,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAU,SAATV,SAAS;EAAAW,YAFR;AAAM","names":["AuthGuard","constructor","auth","router","canActivate","route","state","token","getToken","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Irfan\\Desktop\\todoumlist\\front\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private auth: AuthService,\r\n              private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const token : string = this.auth.getToken();\r\n    if (token) {\r\n      return true;\r\n    } else {\r\n      this.router.navigateByUrl('/auth/connexion');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}