{"ast":null,"code":"import { map } from \"rxjs\";\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction EditTaskComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 10);\n    i0.ɵɵelement(5, \"input\", 15);\n    i0.ɵɵelementStart(6, \"button\", 16);\n    i0.ɵɵelement(7, \"i\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 18);\n    i0.ɵɵelement(9, \"i\", 19);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const previewTask_r1 = ctx.ngIf;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(previewTask_r1.name);\n  }\n}\nexport class EditTaskComponent {\n  constructor(router, formBuilder) {\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    console.log(\"squid\");\n    this.editTaskForm = this.formBuilder.group({\n      name: [null, [Validators.required]]\n    }, {\n      updateOn: 'blur'\n    });\n    this.previewTask$ = this.editTaskForm.valueChanges.pipe(map(task => ({\n      name: task.name,\n      id: 0,\n      finished: false\n    })));\n  }\n  onEditTask() {\n    this.router.navigateByUrl(\"\");\n  }\n  onReturn() {\n    this.router.navigateByUrl(\"\");\n  }\n}\nEditTaskComponent.ɵfac = function EditTaskComponent_Factory(t) {\n  return new (t || EditTaskComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nEditTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditTaskComponent,\n  selectors: [[\"app-edit-task\"]],\n  decls: 19,\n  vars: 4,\n  consts: [[1, \"edit-task\", \"border-2\", \"w-50\", \"mx-auto\", \"text-light\", \"border-2\", \"rounded-3\", \"p-4\"], [3, \"formGroup\"], [1, \"form-floating\", \"mb-3\"], [\"type\", \"text\", \"id\", \"task-name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"task-name\"], [\"id\", \"task-description\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"task-description\"], [1, \"clearfix\"], [1, \"float-start\"], [\"type\", \"button\", 1, \"btn\", \"dark\", \"rounded-4\", 3, \"click\"], [1, \"float-end\"], [\"type\", \"submit\", 1, \"btn\", \"dark\", \"rounded-4\", 3, \"click\"], [\"class\", \"preview-task ms-auto me-auto text-white p-4 my-5 rounded-4\", 4, \"ngIf\"], [1, \"preview-task\", \"ms-auto\", \"me-auto\", \"text-white\", \"p-4\", \"my-5\", \"rounded-4\"], [1, \"div-list-item\"], [\"checked\", \"\", \"disabled\", \"\", \"type\", \"checkbox\", 1, \"form-check-input\", \"me-5\"], [1, \"btn\", \"btn-primary\", \"me-1\", \"disabled\"], [1, \"fa-solid\", \"fa-pen-to-square\", \"fa-xl\"], [1, \"btn\", \"btn-danger\", \"ms-1\", \"disabled\"], [1, \"fa-solid\", \"fa-trash\", \"fa-xl\"]],\n  template: function EditTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵelementStart(4, \"label\", 4);\n      i0.ɵɵtext(5, \"T\\u00E2che\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵelement(7, \"textarea\", 5);\n      i0.ɵɵelementStart(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Description\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8)(12, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function EditTaskComponent_Template_button_click_12_listener() {\n        return ctx.onReturn();\n      });\n      i0.ɵɵtext(13, \"Retour\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 10)(15, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function EditTaskComponent_Template_button_click_15_listener() {\n        return ctx.onEditTask();\n      });\n      i0.ɵɵtext(16, \"Sauvegarder\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(17, EditTaskComponent_div_17_Template, 10, 1, \"div\", 12);\n      i0.ɵɵpipe(18, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.editTaskForm);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(18, 2, ctx.previewTask$));\n    }\n  },\n  dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i3.AsyncPipe],\n  styles: [\".edit-task[_ngcontent-%COMP%] {\\n  background-color: #3c3c3c;\\n  margin-top: 12em;\\n}\\n\\ntextarea[_ngcontent-%COMP%] {\\n  height: 13rem;\\n}\\n\\n.preview-task[_ngcontent-%COMP%] {\\n  width: 50%;\\n  border: 4px solid #3c3c3c;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvY29tcG9uZW50cy9lZGl0LXRhc2svZWRpdC10YXNrLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtBQUNGOztBQUVBO0VBQ0UsVUFBQTtFQUNBLHlCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuZWRpdC10YXNre1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzYzNjM2M7XHJcbiAgbWFyZ2luLXRvcDoxMmVtO1xyXG59XHJcblxyXG50ZXh0YXJlYXtcclxuICBoZWlnaHQ6MTNyZW07XHJcbn1cclxuXHJcbi5wcmV2aWV3LXRhc2t7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBib3JkZXI6IDRweCBzb2xpZCAjM2MzYzNjO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAQA,GAAG,QAAmB,MAAM;AAGpC,SAAgCC,UAAU,QAAO,gBAAgB;;;;;;;ICiBjEC,+BAAoH;IAE7GA,YAAoB;IAAAA,iBAAI;IAC3BA,+BAAuB;IACrBA,4BAAsE;IACtEA,kCAA8C;IAAAA,wBAA+C;IAAAA,iBAAS;IACtGA,kCAA6C;IAAAA,wBAAuC;IAAAA,iBAAS;;;;IAJ5FA,eAAoB;IAApBA,yCAAoB;;;ADZ3B,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,MAAa,EAAUC,WAAwB;IAA/C,WAAM,GAAND,MAAM;IAAiB,gBAAW,GAAXC,WAAW;EAAgB;EAEtEC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACzCC,IAAI,EAAE,CAAC,IAAI,EAAE,CAACX,UAAU,CAACY,QAAQ,CAAC;KACnC,EAAE;MACDC,QAAQ,EAAE;KACX,CAAC;IACF,IAAI,CAACC,YAAY,GAAG,IAAI,CAACL,YAAY,CAACM,YAAY,CAACC,IAAI,CACrDjB,GAAG,CAAEkB,IAAU,KAAM;MACnBN,IAAI,EAACM,IAAI,CAACN,IAAI;MACdO,EAAE,EAAC,CAAC;MACJC,QAAQ,EAAC;KACV,CAAC,CAAC,CAAC;EACR;EAEAC,UAAU;IACR,IAAI,CAAChB,MAAM,CAACiB,aAAa,CAAC,EAAE,CAAC;EAC/B;EAEAC,QAAQ;IACN,IAAI,CAAClB,MAAM,CAACiB,aAAa,CAAC,EAAE,CAAC;EAC/B;;AA3BWnB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ9B1B,8BAA+E;MAGzEA,2BAAuF;MACvFA,gCAAuB;MAAAA,0BAAK;MAAAA,iBAAQ;MAEtCA,8BAAgC;MAC9BA,8BAAyE;MACzEA,gCAA8B;MAAAA,2BAAW;MAAAA,iBAAQ;MAEnDA,+BAAsB;MAEIA;QAAA,OAAS2B,cAAU;MAAA,EAAC;MAA4B3B,uBAAM;MAAAA,iBAAS;MAEvFA,gCAAuB;MACCA;QAAA,OAAS2B,gBAAY;MAAA,EAAC;MAA4B3B,4BAAW;MAAAA,iBAAS;MAOpGA,sEASM;;;;MA9BEA,eAA0B;MAA1BA,4CAA0B;MAqBuCA,gBAA2B;MAA3BA,8DAA2B","names":["map","Validators","i0","EditTaskComponent","constructor","router","formBuilder","ngOnInit","console","log","editTaskForm","group","name","required","updateOn","previewTask$","valueChanges","pipe","task","id","finished","onEditTask","navigateByUrl","onReturn","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Irfan\\Desktop\\todoumlist\\front\\src\\app\\features\\components\\edit-task\\edit-task.component.ts","C:\\Users\\Irfan\\Desktop\\todoumlist\\front\\src\\app\\features\\components\\edit-task\\edit-task.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {map, Observable} from \"rxjs\";\nimport {Task} from \"../../../core/models/task.model\";\nimport { OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.scss']\n})\nexport class EditTaskComponent {\n\n  editTaskForm!: FormGroup;\n  previewTask$!: Observable<Task>;\n  constructor(private router:Router, private formBuilder: FormBuilder) {}\n\n  ngOnInit():void{\n    console.log(\"squid\");\n    this.editTaskForm = this.formBuilder.group({\n      name: [null, [Validators.required]]\n    }, {\n      updateOn: 'blur'\n    });\n    this.previewTask$ = this.editTaskForm.valueChanges.pipe(\n      map((task: Task) => ({\n        name:task.name,\n        id:0,\n        finished:false\n      })));\n  }\n\n  onEditTask():void{\n    this.router.navigateByUrl(\"\");\n  }\n\n  onReturn() : void {\n    this.router.navigateByUrl(\"\");\n  }\n}\n","<div class=\"edit-task border-2 w-50 mx-auto text-light border-2 rounded-3 p-4\">\n  <form [formGroup]=\"editTaskForm\">\n    <div class=\"form-floating mb-3\">\n      <input type=\"text\" class=\"form-control\" id=\"task-name\" formControlName=\"name\" required>\n      <label for=\"task-name\">Tâche</label>\n    </div>\n    <div class=\"form-floating mb-3\">\n      <textarea class=\"form-control\" id=\"task-description\" required></textarea>\n      <label for=\"task-description\">Description</label>\n    </div>\n    <div class=\"clearfix\">\n      <div class=\"float-start\">\n        <button type=\"button\" (click)=\"onReturn()\" class=\"btn dark rounded-4\">Retour</button>\n      </div>\n      <div class=\"float-end\">\n        <button type=\"submit\" (click)=\"onEditTask()\" class=\"btn dark rounded-4\">Sauvegarder</button>\n      </div>\n    </div>\n  </form>\n</div>\n\n\n<div class=\"preview-task ms-auto me-auto text-white p-4 my-5 rounded-4\" *ngIf=\"previewTask$ | async as previewTask\">\n  <div class=\"div-list-item\">\n    <p>{{previewTask.name}}</p>\n    <div class=\"float-end\">\n      <input class=\"form-check-input me-5\" checked disabled type=\"checkbox\">\n      <button class=\"btn btn-primary me-1 disabled\"><i class=\"fa-solid fa-pen-to-square fa-xl\"></i></button>\n      <button class=\"btn btn-danger ms-1 disabled\"><i class=\"fa-solid fa-trash fa-xl\"></i></button>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}