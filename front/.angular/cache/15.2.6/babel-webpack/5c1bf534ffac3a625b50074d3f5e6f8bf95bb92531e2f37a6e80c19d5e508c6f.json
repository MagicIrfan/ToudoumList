{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.tasks = [{\n      id: 0,\n      name: \"Manger tes morts\",\n      finished: false\n    }];\n  }\n  getAllTasks() {\n    return this.tasks;\n  }\n  getTaskById(id) {\n    return this.tasks.find(task => task.id === id);\n  }\n  getNumberTasks() {\n    return this.tasks.length;\n  }\n  getLastId() {\n    const maxId = this.tasks.reduce((max, task) => Math.max(max, task.id), 0);\n    return maxId === 0 ? 0 : maxId + 1;\n  }\n  addTask(newTask) {\n    this.tasks.push(newTask);\n  }\n}\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)();\n};\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EAItBC;IACE,IAAI,CAACC,KAAK,GAAG,CACX;MACEC,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,kBAAkB;MACvBC,QAAQ,EAAC;KACV,CACF;EACH;EAEAC,WAAW;IACT,OAAO,IAAI,CAACJ,KAAK;EACnB;EAEAK,WAAW,CAACJ,EAAS;IACnB,OAAO,IAAI,CAACD,KAAK,CAACM,IAAI,CAAEC,IAAU,IAAKA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC;EACxD;EAEAO,cAAc;IACZ,OAAO,IAAI,CAACR,KAAK,CAACS,MAAM;EAC1B;EAEAC,SAAS;IACP,MAAMC,KAAK,GAAY,IAAI,CAACX,KAAK,CAACY,MAAM,CAAC,CAACC,GAAG,EAAEN,IAAI,KAAKO,IAAI,CAACD,GAAG,CAACA,GAAG,EAAEN,IAAI,CAACN,EAAE,CAAC,EAAE,CAAC,CAAC;IAClF,OAAOU,KAAK,KAAK,CAAC,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC;EACpC;EAEAI,OAAO,CAACC,OAAa;IACnB,IAAI,CAAChB,KAAK,CAACiB,IAAI,CAACD,OAAO,CAAC;EAC1B;;AAjCWlB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["TaskService","constructor","tasks","id","name","finished","getAllTasks","getTaskById","find","task","getNumberTasks","length","getLastId","maxId","reduce","max","Math","addTask","newTask","push","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Irfan\\Desktop\\todoumlist\\front\\src\\app\\core\\services\\task.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {Task} from \"./../models/task.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  private tasks!: Task[];\r\n\r\n  constructor() {\r\n    this.tasks = [\r\n      {\r\n        id:0,\r\n        name:\"Manger tes morts\",\r\n        finished:false\r\n      }\r\n    ]\r\n  }\r\n\r\n  getAllTasks(): Task[] {\r\n    return this.tasks;\r\n  }\r\n\r\n  getTaskById(id:number): Task | undefined {\r\n    return this.tasks.find((task: Task) => task.id === id);\r\n  }\r\n\r\n  getNumberTasks():number{\r\n    return this.tasks.length;\r\n  }\r\n\r\n  getLastId():number{\r\n    const maxId : number = this.tasks.reduce((max, task) => Math.max(max, task.id), 0);\r\n    return maxId === 0 ? 0 : maxId + 1;\r\n  }\r\n\r\n  addTask(newTask: Task):void{\r\n    this.tasks.push(newTask);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}