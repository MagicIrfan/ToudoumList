{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/services/task.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CreateTaskComponent {\n  ngOnInit() {\n    this.newRecipeForm = this.formBuilder.group({\n      name: [null, [Validators.required]],\n      description: [null, [Validators.required]],\n      location: [null, [Validators.required]],\n      bakeTime: [null, [Validators.required]],\n      preparationTime: [null, [Validators.required]]\n    }, {\n      updateOn: 'blur'\n    });\n    this.recipePreview$ = this.newRecipeForm.valueChanges.pipe(map(recipe => ({\n      ...recipe,\n      persons: 0,\n      id: 0,\n      userID: 0\n    })));\n    this.urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)/;\n  }\n  constructor(taskService, formBuilder) {\n    this.taskService = taskService;\n    this.formBuilder = formBuilder;\n  }\n  onCreateTask() {}\n}\nCreateTaskComponent.ɵfac = function CreateTaskComponent_Factory(t) {\n  return new (t || CreateTaskComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nCreateTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateTaskComponent,\n  selectors: [[\"app-create-task\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"row\", \"g-2\", 3, \"formGroup\"], [1, \"form-floating\", \"col-10\"], [\"type\", \"text\", \"id\", \"new-task\", \"placeholder\", \"Saisir une nouvelle t\\u00E2che\", 1, \"form-control\", \"text-light\"], [\"for\", \"new-task\", 1, \"text-light\"], [1, \"col-2\"], [1, \"btn\", \"btn-danger\", \"h-100\", \"w-75\", 3, \"click\"], [1, \"fa-solid\", \"fa-plus\", \"fa-2xl\"]],\n  template: function CreateTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementStart(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Saisir une nouvelle t\\u00E2che\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function CreateTaskComponent_Template_button_click_6_listener() {\n        return ctx.onCreateTask();\n      });\n      i0.ɵɵelement(7, \"i\", 6);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.newTaskForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective],\n  styles: [\"#new-task[_ngcontent-%COMP%] {\\n  background: #303030;\\n  border-color: #303030;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvY29tcG9uZW50cy9jcmVhdGUtdGFzay9jcmVhdGUtdGFzay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFBO0VBQ0EscUJBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIiNuZXctdGFza3tcclxuICBiYWNrZ3JvdW5kOiAjMzAzMDMwO1xyXG4gIGJvcmRlci1jb2xvcjogIzMwMzAzMDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,mBAAmB;EAG9BC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,WAAW,CAACC,KAAK,CAAC;MAC1CC,IAAI,EAAE,CAAC,IAAI,EAAE,CAACC,UAAU,CAACC,QAAQ,CAAC,CAAC;MACnCC,WAAW,EAAE,CAAC,IAAI,EAAE,CAACF,UAAU,CAACC,QAAQ,CAAC,CAAC;MAC1CE,QAAQ,EAAE,CAAC,IAAI,EAAC,CAACH,UAAU,CAACC,QAAQ,CAAC,CAAC;MACtCG,QAAQ,EAAE,CAAC,IAAI,EAAC,CAACJ,UAAU,CAACC,QAAQ,CAAC,CAAC;MACtCI,eAAe,EAAE,CAAC,IAAI,EAAC,CAACL,UAAU,CAACC,QAAQ,CAAC;KAC7C,EAAE;MACDK,QAAQ,EAAE;KACX,CAAC;IACF,IAAI,CAACC,cAAc,GAAG,IAAI,CAACX,aAAa,CAACY,YAAY,CAACC,IAAI,CACxDC,GAAG,CAAEC,MAAc,KAAM;MACvB,GAAGA,MAAM;MACTC,OAAO,EAAC,CAAC;MACTC,EAAE,EAAC,CAAC;MACJC,MAAM,EAAC;KACR,CAAC,CAAC,CAAC;IACN,IAAI,CAACC,QAAQ,GAAG,gGAAgG;EAClH;EAEAC,YAAoBC,WAAwB,EAASpB,WAAwB;IAAzD,gBAAW,GAAXoB,WAAW;IAAsB,gBAAW,GAAXpB,WAAW;EAAgB;EAChFqB,YAAY,IAEZ;;AA1BWxB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCThCC,+BAAgD;MAE5CA,2BAA0G;MAC1GA,gCAAyC;MAAAA,8CAAyB;MAAAA,iBAAQ;MAE5EA,8BAAmB;MACTA;QAAA,OAASC,kBAAc;MAAA,EAAC;MAAmCD,uBAAuC;MAAAA,iBAAS;;;MANjGA,2CAAyB","names":["CreateTaskComponent","ngOnInit","newRecipeForm","formBuilder","group","name","Validators","required","description","location","bakeTime","preparationTime","updateOn","recipePreview$","valueChanges","pipe","map","recipe","persons","id","userID","urlRegex","constructor","taskService","onCreateTask","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Irfan\\Desktop\\todoumlist\\front\\src\\app\\features\\components\\create-task\\create-task.component.ts","C:\\Users\\Irfan\\Desktop\\todoumlist\\front\\src\\app\\features\\components\\create-task\\create-task.component.html"],"sourcesContent":["import { Component, OnInit  } from '@angular/core';\nimport {TaskService} from \"../../../core/services/task.service\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.scss']\n})\nexport class CreateTaskComponent {\n  newTaskForm!: FormGroup;\n\n  ngOnInit():void{\n    this.newRecipeForm = this.formBuilder.group({\n      name: [null, [Validators.required]],\n      description: [null, [Validators.required]],\n      location: [null,[Validators.required]],\n      bakeTime: [null,[Validators.required]],\n      preparationTime: [null,[Validators.required]]\n    }, {\n      updateOn: 'blur'\n    });\n    this.recipePreview$ = this.newRecipeForm.valueChanges.pipe(\n      map((recipe: Recipe) => ({\n        ...recipe,\n        persons:0,\n        id:0,\n        userID:0\n      })));\n    this.urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)/;\n  }\n\n  constructor(private taskService: TaskService,private formBuilder: FormBuilder) {}\n  onCreateTask() {\n\n  }\n}\n","<form class=\"row g-2\" [formGroup]=\"newTaskForm\">\n  <div class=\"form-floating col-10\">\n    <input type=\"text\" class=\"form-control text-light\" id=\"new-task\" placeholder=\"Saisir une nouvelle tâche\"/>\n    <label for=\"new-task\" class=\"text-light\">Saisir une nouvelle tâche</label>\n  </div>\n  <div class=\"col-2\">\n    <button (click)=\"onCreateTask()\" class=\"btn btn-danger h-100 w-75\"><i class=\"fa-solid fa-plus fa-2xl\"></i></button>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}